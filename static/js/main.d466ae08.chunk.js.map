{"version":3,"sources":["images/bus-top.png","components/Bus.jsx","components/Grid.jsx","components/Place.jsx","components/Control.jsx","components/Notification.jsx","components/Report.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Bus","props","bus","react_default","a","createElement","className","concat","positionX","positionY","face","src","Image","width","alt","Grid","Place","data","onChangePlaceAttribute","onPlaceBus","onSubmit","e","htmlFor","name","id","value","onChange","Control","placed","onMove","onRotate","onReport","role","aria-label","type","disabled","onClick","Notification","massage","Report","status","App","state","error","showReport","createGrids","gridLength","config","gridSize","grids","row","i","j","push","components_Grid","key","handlePlaceAttribute","_ref","select","currentTarget","Object","objectSpread","_this","parseInt","setState","handlePlaceBus","preventDefault","stopBus","msg","handleMove","handleRotate","directions","newDireciton","currentIndex","indexOf","target","length","newBus","handleReport","renderReport","components_Report","renderBus","components_Bus","renderError","components_Notification","this","Fragment","components_Place","components_Control","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d466ae08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bus-top.c2b2d1a7.png\";","import React from \"react\";\nimport Image from \"./../images/bus-top.png\";\nimport PropTypes from \"prop-types\";\n\nconst Bus = props => {\n  const { bus } = props;\n  return (\n    <div\n      className={`bus pos-${bus.positionX}-${bus.positionY} face-${bus.face}`}\n    >\n      <img src={Image} width=\"100\" alt=\"\" />\n    </div>\n  );\n};\n\nBus.propTypes = {\n  bus: PropTypes.object.isRequired\n};\n\nexport default Bus;\n","import React from \"react\";\n\nconst Grid = () => {\n  return <div className=\"grid\" />;\n};\n\nexport default Grid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Place = props => {\n  const { data: bus, onChangePlaceAttribute, onPlaceBus } = props;\n\n  return (\n    <div className=\"bus-control\">\n      <div className=\"container-fluid\">\n        <h3>Step 1: Place a bus</h3>\n        <form\n          className=\"mb-3\"\n          onSubmit={e => {\n            onPlaceBus(e);\n          }}\n        >\n          <div className=\"row\">\n            <div className=\"col-md-3\">\n              <div className=\"form-group\">\n                <label htmlFor=\"positionX\">X position</label>\n                <select\n                  name=\"positionX\"\n                  id=\"positionX\"\n                  className=\"custom-select\"\n                  value={bus.positionX}\n                  onChange={e => onChangePlaceAttribute(e)}\n                >\n                  <option value=\"0\">0</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"form-group\">\n                <label htmlFor=\"positionY\">Y position</label>\n                <select\n                  name=\"positionY\"\n                  id=\"positionY\"\n                  className=\"custom-select\"\n                  value={bus.positionY}\n                  onChange={e => onChangePlaceAttribute(e)}\n                >\n                  <option value=\"0\">0</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"form-group\">\n                <label htmlFor=\"face\">Facing</label>\n                <select\n                  name=\"face\"\n                  id=\"face\"\n                  className=\"custom-select\"\n                  value={bus.face}\n                  onChange={e => onChangePlaceAttribute(e)}\n                >\n                  <option value=\"north\">North</option>\n                  <option value=\"east\">East</option>\n                  <option value=\"south\">South</option>\n                  <option value=\"west\">West</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-3 align-self-end\">\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Place bus</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nPlace.propTypes = {\n  data: PropTypes.object.isRequired,\n  onChangePlaceAttribute: PropTypes.func.isRequired,\n  onPlaceBus: PropTypes.func.isRequired\n};\n\nexport default Place;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Control = props => {\n  const { placed, onMove, onRotate, onReport } = props;\n  return (\n    <div className=\"bus-control\">\n      <div className=\"container-fluid\">\n        <h3>Step 2: Move and rotate the bus</h3>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"controls\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            id=\"move\"\n            disabled={!placed}\n            onClick={() => onMove()}\n          >\n            Move\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            id=\"rotate-left\"\n            name=\"left\"\n            disabled={!placed}\n            onClick={onRotate}\n          >\n            Left\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            id=\"rotate-right\"\n            name=\"right\"\n            disabled={!placed}\n            onClick={onRotate}\n          >\n            Right\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            id=\"report\"\n            disabled={!placed}\n            onClick={() => onReport()}\n          >\n            Report\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nControl.propTypes = {\n  placed: PropTypes.bool,\n  onMove: PropTypes.func,\n  onRotate: PropTypes.func,\n  onReport: PropTypes.func\n};\n\nexport default Control;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = props => {\n  const { massage } = props;\n  return <div className=\"alert alert-danger text-center\">{massage}</div>;\n};\n\nNotification.propTypes = {\n  massge: PropTypes.string\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Report = props => {\n  const { status } = props;\n  return (\n    <div className=\"alert alert-success text-center\" role=\"alert\">\n      The bus is currently parked at <strong>X: {status.positionX}</strong> and{\" \"}\n      <strong>Y: {status.positionY}</strong>, facing{\" \"}\n      <strong>{status.face}</strong>\n    </div>\n  );\n};\n\nReport.propTypes = {\n  status: PropTypes.object.isRequired\n};\n\nexport default Report;\n","import React, { Component } from \"react\";\nimport Bus from \"./components/Bus\";\nimport Grid from \"./components/Grid\";\nimport Place from \"./components/Place\";\nimport Control from \"./components/Control\";\nimport Notification from \"./components/Notification\";\nimport Report from \"./components/Report\";\nimport config from \"./config.json\";\n\nimport \"./App.css\";\nimport \"./css/grid.css\";\n\nclass App extends Component {\n  state = {\n    bus: {\n      positionX: 0,\n      positionY: 0,\n      face: \"north\",\n      placed: false\n    },\n    error: \"\",\n    showReport: false\n  };\n\n  createGrids = () => {\n    const gridLength = config.gridSize;\n    let grids = [];\n    let row = [];\n    for (let i = 0; i < gridLength; i++) {\n      for (let j = 0; j < gridLength; j++) {\n        row.push(<Grid className={`grid-${i}-${j}`} key={`grid-${i}-${j}`} />);\n      }\n      grids.push(row);\n      row = [];\n    }\n\n    return grids;\n  };\n\n  handlePlaceAttribute = ({ currentTarget: select }) => {\n    const bus = { ...this.state.bus };\n    bus[select.name] =\n      select.name === \"face\" ? select.value : parseInt(select.value);\n\n    bus.placed = false;\n    this.setState({\n      bus: bus,\n      error: \"\",\n      showReport: false\n    });\n  };\n\n  handlePlaceBus = e => {\n    e.preventDefault();\n    const bus = { ...this.state.bus };\n    bus.placed = true;\n    this.setState({\n      bus: bus,\n      error: \"\",\n      showReport: false\n    });\n  };\n\n  stopBus = msg => {\n    this.setState({\n      error: msg,\n      showReport: false\n    });\n  };\n\n  handleMove = () => {\n    const { bus } = this.state;\n    switch (bus.face) {\n      case \"north\":\n        if (bus.positionY < config.gridSize - 1) {\n          this.setState({\n            bus: {\n              ...bus,\n              positionY: bus.positionY + 1\n            },\n            error: \"\",\n            showReport: false\n          });\n        } else {\n          this.stopBus(\n            `You can’t go further ${bus.face}! Please stay in the carpark.`\n          );\n        }\n\n        break;\n      case \"south\":\n        if (bus.positionY > 0) {\n          this.setState({\n            bus: {\n              ...bus,\n              positionY: bus.positionY - 1\n            },\n            error: \"\",\n            showReport: false\n          });\n        } else {\n          this.stopBus(\n            `You can’t go further ${bus.face}! Please stay in the carpark.`\n          );\n        }\n        break;\n      case \"east\":\n        if (bus.positionX < config.gridSize - 1) {\n          this.setState({\n            bus: {\n              ...bus,\n              positionX: bus.positionX + 1\n            },\n            error: \"\",\n            showReport: false\n          });\n        } else {\n          this.stopBus(\n            `You can’t go further ${bus.face}! Please stay in the carpark.`\n          );\n        }\n        break;\n      case \"west\":\n        if (bus.positionX > 0) {\n          this.setState({\n            bus: {\n              ...bus,\n              positionX: bus.positionX - 1\n            },\n            error: \"\",\n            showReport: false\n          });\n        } else {\n          this.stopBus(\n            `You can’t go further ${bus.face}! Please stay in the carpark.`\n          );\n        }\n        break;\n      default:\n        return;\n    }\n  };\n\n  handleRotate = e => {\n    const directions = config.directions;\n    const { bus } = this.state;\n    let newDireciton = \"\";\n    let currentIndex = directions.indexOf(bus.face);\n    if (e.target.name === \"right\") {\n      if (directions[currentIndex + 1]) {\n        newDireciton = directions[currentIndex + 1];\n      } else {\n        newDireciton = directions[0];\n      }\n    } else {\n      if (directions[currentIndex - 1]) {\n        newDireciton = directions[currentIndex - 1];\n      } else {\n        newDireciton = directions[directions.length - 1];\n      }\n    }\n\n    const newBus = { ...bus };\n    newBus.face = newDireciton;\n    this.setState({\n      bus: newBus,\n      error: \"\",\n      showReport: false\n    });\n  };\n\n  handleReport = () => {\n    this.setState({\n      showReport: true,\n      error: \"\"\n    });\n  };\n\n  renderReport = () => {\n    if (!this.state.showReport) {\n      return;\n    }\n    return <Report status={this.state.bus} />;\n  };\n\n  renderBus = () => {\n    const { bus } = this.state;\n    if (!this.state.bus.placed) {\n      return;\n    }\n    return <Bus bus={bus} />;\n  };\n\n  renderError = () => {\n    const { error } = this.state;\n    if (!error) {\n      return;\n    }\n    return <Notification massage={error} />;\n  };\n\n  render() {\n    const { bus } = this.state;\n    return (\n      <React.Fragment>\n        {this.renderError()}\n        {this.renderReport()}\n        <Place\n          data={bus}\n          onChangePlaceAttribute={this.handlePlaceAttribute}\n          onPlaceBus={this.handlePlaceBus}\n        />\n        <Control\n          placed={bus.placed}\n          onMove={this.handleMove}\n          onReport={this.handleReport}\n          onRotate={this.handleRotate}\n        />\n        <div className=\"park\">\n          {this.createGrids()}\n          {this.renderBus()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}